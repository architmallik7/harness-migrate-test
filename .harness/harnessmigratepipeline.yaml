pipeline:
  projectIdentifier: architpipeline
  orgIdentifier: default
  tags: {}
  properties:
    ci:
      codebase:
        connectorRef: droneawsoidc
        repoName: harness-migrate-test
        build: <+input>
        sparseCheckout: []
  stages:
    - stage:
        name: default
        identifier: Release
        description: ""
        type: CI
        spec:
          cloneCodebase: true
          caching:
            enabled: false
            paths: []
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Cloud
            spec: {}
          execution:
            steps:
              - step:
                  type: Run
                  name: Test
                  identifier: Test
                  spec:
                    connectorRef: account.harnessImage
                    image: golang:1.21
                    shell: Sh
                    command: |-
                      go test -coverprofile=cover.out ./...
                      go tool cover -func=cover.out
                  when:
                    stageStatus: Success
                    condition: ""
              - step:
                  type: Run
                  name: Build Binary
                  identifier: Build_Binary
                  spec:
                    connectorRef: account.harnessImage
                    image: golang:1.21
                    shell: Sh
                    command: |-
                      GOOS=linux   GOARCH=amd64   go build -ldflags "-extldflags=-static -X github.com/harness/harness-migrate/cmd.version=${DRONE_TAG##v}" -o release/linux/amd64/harness-migrate
                      GOOS=linux   GOARCH=arm64   go build -ldflags "-extldflags=-static -X github.com/harness/harness-migrate/cmd.version=${DRONE_TAG##v}" -o release/linux/arm64/harness-migrate
                      GOOS=darwin  GOARCH=amd64   go build -ldflags "-extldflags=-static -X github.com/harness/harness-migrate/cmd.version=${DRONE_TAG##v}" -o release/darwin/amd64/harness-migrate
                      GOOS=darwin  GOARCH=arm64   go build -ldflags "-extldflags=-static -X github.com/harness/harness-migrate/cmd.version=${DRONE_TAG##v}" -o release/darwin/arm64/harness-migrate
                      GOOS=windows GOARCH=amd64   go build -ldflags "-extldflags=-static -X github.com/harness/harness-migrate/cmd.version=${DRONE_TAG##v}" -o release/windows/amd64/harness-migrate.exe
                      GOOS=windows GOARCH=arm64   go build -ldflags "-extldflags=-static -X github.com/harness/harness-migrate/cmd.version=${DRONE_TAG##v}" -o release/windows/arm64/harness-migrate.exe

                      tar -cvzf release/harness-migrate-linux-amd64.tar.gz -C release/linux/amd64 harness-migrate
                      tar -cvzf release/harness-migrate-linux-arm64.tar.gz -C release/linux/arm64 harness-migrate
                      tar -cvzf release/harness-migrate-darwin-amd64.tar.gz -C release/darwin/amd64 harness-migrate
                      tar -cvzf release/harness-migrate-darwin-arm64.tar.gz -C release/darwin/arm64 harness-migrate
                      tar -cvzf release/harness-migrate-windows-amd64.tar.gz -C release/windows/amd64 harness-migrate.exe
                      tar -cvzf release/harness-migrate-windows-arm64.tar.gz -C release/windows/arm64 harness-migrate.exe

                      sha256sum release/*.tar.gz > release/harness-migrate-checksums.txt
                    envVariables:
                      CGO_ENABLED: "0"
                  when:
                    stageStatus: Success
                    condition: ""
              - step:
                  type: Plugin
                  name: Release
                  identifier: Release
                  spec:
                    connectorRef: Plugin_Connector
                    image: plugins/github-release
                    settings:
                      api_key: <+secrets.getValue("ci_job_github_pat")>
                      title: <+trigger.tag>
                      files: release/harness-migrate-*.tar.gz, release/harness-migrate-checksums.txt
                      DRONE_REPO_OWNER: harness
                      DRONE_REPO_NAME: harness-migrate
                  when:
                    stageStatus: Success
                    condition: |
                      <+codebase.build.type> == "tag"
        variables:
          - name: DRONE_REPO_OWNER
            type: String
            description: ""
            required: false
            value: harness
          - name: DRONE_REPO_NAME
            type: String
            description: ""
            required: false
            value: harness-migrate
  identifier: harnessmigrate_Clone
  name: harness-migrate
  description: https://github.com/harness/harness-migrate
